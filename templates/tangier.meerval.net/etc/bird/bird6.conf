{% include 'ipv6.j2' %}

filter tardis_in
{
    if net ~ [ 2001:67c:208c:10::/64, 2001:728:1808:1::20/126 ] then accept;
    reject;
}

filter ircd_in
{
    if ( net = 2001:728:1808:2::132/128 ) then accept;
    reject;
}

filter ntt_out
{
    if ( net = 2001:67c:208c::/48 ) then {
        bgp_large_community.add ((15562,1,1));
        accept;
    }

    if ( net ~ [
            2001:728:1808::/48,
            2a04:ec40:ff24::/48,
            2001:067c:1b43::/48
    ] ) then {
        bgp_community.add ((65535,65281));
        accept;
    }

    if ( net = 2001:728:1808:2::132/128 ) then {
        bgp_path.prepend(15562);
        bgp_community.add ((65535,65281));
        accept;
    }

    # downstream routes
    if ( (15562,0,1) ~ bgp_large_community ) then {
        accept;
    }
    reject;
}

filter AS31451_import
prefix set AS31451;
int set AS31451_origins;
{
	include "filters/AS31451.ipv6.conf";
	include "filters/AS31451.origins.conf";
	reject_bogon_asns();
	reject_bogon_prefixes();
	reject_rpki_invalid();
	if !(bgp_path.last ~ AS31451_origins) then {
		print "AS31451_import() protocol ", proto, " Origin AS ", bgp_path.last, " not in IRR AS-KING: ", net, " path: ", bgp_path;
		reject;
	}
	if (net ~ AS31451) then {
		bgp_large_community.add((15562,0,1));
		accept;
	}
	print "AS31451_import() protocol ", proto, " prefix not in IRR AS-KING: ", net, " path: ", bgp_path;
	reject;
}
