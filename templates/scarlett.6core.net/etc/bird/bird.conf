router id 165.254.255.1;

table collector;

include "defines.conf";

include "filters-ipv4.conf";

# include "rpki-data.ipv4.conf";

include "generic.conf";

protocol static blackhole1 {
    include "/etc/bird/blackholes/*.ipv4.conf";
}

protocol static {
    route 192.147.168.0/24 blackhole;
    route 192.147.168.255/32 via 165.254.255.2;
    route 165.254.255.132/32 via 165.254.255.32;
}

protocol kernel {
    persist;
    scan time 20;
    import all;
    export filter {
        if proto = "blackhole1" then reject;
        accept;
    };
}

protocol device {
    scan time 10;
}

protocol bfd bfd1 {
}

protocol direct {
    interface "eth0.100";
    interface "virbr0";
    interface "lo";
    interface "tardis4";
}

protocol bgp tardis1 {
    neighbor 192.147.168.246 as 15562;
    local as 15562;
    direct;
    rr client;
    bfd off;
    import filter {
        if (net = 192.147.168.0/25) then accept;
        reject;
    };
    export all;
}

filter import_ntt
prefix set nttirr;
{
    scrub_communities(untrusted);

    include "/etc/bird/ntt.v4.conf";
    if net = 165.254.255.132/32 then reject;
    if (net ~ nttirr && (2914,410) ~ bgp_community ) then {
        bgp_community.add((15562,410));
    } else if ((2914,410) ~ bgp_community) then {
        bgp_community.add((15562,411));
    }
    bgp_med = 0;
    accept;
}

protocol bgp ibgp {
    description "ibgp";
    local as 15562;
    neighbor 165.254.255.2 as 15562;
    source address 165.254.255.1;
    direct;
    next hop self;
    import filter import_ntt;
    export all;
    bfd on;
}

protocol bgp ircd1 {
    description "backend.ams.irc.nlnog.net";
    local as 15562;
    neighbor 165.254.255.32 as 15562;
    source address 165.254.255.1;
    direct;
    import filter {
        if ( net = 165.254.255.132/32 ) then accept;
        reject;
    };
    export filter {
        if ( net = 0.0.0.0/0 ) then accept;
        reject;
    };
}

protocol bgp atr1 {
    description "ams01.atr.ilams.net";
    local as 15562;
    neighbor 165.254.255.23 as 15562;
    source address 165.254.255.1;
    direct;
    import filter {
        scrub_communities(trusted);
        if net = 67.221.245.0/24 then {
            bgp_large_community.add((15562,0,1));
            accept;
        }
        reject;
    };
    export none;
}

template bgp ntt {
    local as 15562;
    hold time 180;
    startup hold time 240;
    connect retry time 120;
    keepalive time 80;
    connect delay time 5;
    error wait time 60, 300;
    error forget time 300;  
    next hop self;
    allow local as 1;
    import filter import_ntt;
    export filter {
        if proto = "blackhole1" then {
            if (net.len = 32) then {
                # selective blackhole - discard outside country
                bgp_community.add((2914,664));
                accept;
            }
        }
        if ( net ~ 165.254.255.60/32 ) then {
            bgp_community.add ((2914,660));
            accept;
        }
        if ( net ~ 165.254.255.61/32 ) then {
            bgp_community.add ((2914,661));
            accept;
        }
        if ( net ~ 165.254.255.63/32 ) then {
            bgp_community.add ((2914,663));
            accept;
        }
        if ( net ~ 165.254.255.64/32 ) then {
            bgp_community.add ((2914,664));
            accept;
        }
        if ( net ~ 165.254.255.66/32 ) then {
            bgp_community.add ((2914,666));
            accept;
        }
        if ( net ~ 165.254.255.132/32 ) then {
            bgp_community.add((2914, 450));
            bgp_community.add((65535, 65281));
            bgp_path.prepend(15562);
            bgp_med = 9999;
            accept;
        }

        if ( net ~ 165.254.255.100/32 ) then {
            bgp_community.add((65535, 65282));
            bgp_community.add((2914, 666));
            accept;
        }

        if ( net = 192.147.168.0/24 ) then {
            bgp_community.add((65535, 0));
            bgp_large_community.add((15562,1,1));
            accept;
        }

        # ATR
        if net = 67.221.245.0/24 then {
            if is_downstream(myself) then accept;
        }

        if ( net ~ [
                194.33.96.0/24,
                165.254.255.0/24,
                165.254.255.0/25,
                193.47.147.0/24
        ] ) then {
            bgp_path.prepend(15562);
            accept;
        }
        reject;
    };
}

protocol bgp NTT1 from ntt {
    description "NTT 1";
    neighbor 83.231.213.225 as 2914;
    source address 83.231.213.226;  
}

template bgp nttcollector {
    table collector;
    local as 15562;
    multihop;
    source address 165.254.255.1;
    import all;
    export none;
    preference 1;
}

protocol bgp ntteu1 from nttcollector {
    description "NTT EU";
    neighbor 129.250.0.153 as 2914;
}

protocol bgp nttus1 from nttcollector {
    description "NTT US";
    neighbor 129.250.000.223 as 2914;
}

protocol bgp nttsa1 from nttcollector {
    table master;
    description "NTT South America";
    neighbor 129.250.000.224 as 2914;
}

protocol bgp nttasia1 from nttcollector {
    description "NTT Asia";
    neighbor 129.250.000.225 as 2914;
    export none;
}

protocol bgp kiera {
    table collector;
    local as 15562;
    import none;
    neighbor 165.254.255.26 as 15562;
    rr client;
    add paths tx;
    export all;
    import none;
    source address 165.254.255.1;
}

protocol bgp kali1 {
    local as 15562;
    neighbor 165.254.255.17 as 15562;
    source address 165.254.255.1;
    import none;
    export none;
}

template bgp t_downstream {
    local as 15562;
    export all;
    import none;
    import keep filtered;
    next hop self;
    source address 165.254.255.1;
    direct;
}

filter AS267_import
prefix set AS267;
int set AS267_origins;
{
    include "filters/AS267.ipv4.conf";
    include "filters/AS267.origins.conf";

    scrub_communities(downstream);
    reject_bogon_asns();
    reject_bogon_prefixes();
    # reject_rpki_invalid();

    if !(bgp_path.last ~ AS267_origins) then {
        print "AS267_import() protocol ", proto, " Origin AS ", bgp_path.last, " not in IRR AS-NETHER: ", net, " path: ", bgp_path;
        reject;
    }
    if (net ~ AS267) then {
        bgp_large_community.add((15562,0,1));
        accept;
    }
    print "AS267_import() protocol ", proto, " prefix not in IRR AS-NETHER: ", net, " path: ", bgp_path;
    reject;
}

protocol bgp nether1 from t_downstream {
    neighbor 165.254.255.8 as 267;
    import filter AS267_import;
}
